name: Test Build

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master]

jobs:
  test-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install -g @vscode/vsce
          npm install

      - name: Validate publisher configuration
        run: |
          PUBLISHER=$(node -p "require('./package.json').publisher")
          if [ -z "$PUBLISHER" ]; then
            echo "‚ùå Publisher not found in package.json"
            exit 1
          fi
          echo "‚úÖ Publisher: $PUBLISHER"

      - name: Validate package.json
        run: |
          echo "üìã Validating package.json..."
          vsce ls

      - name: Validate theme file
        run: |
          echo "üé® Validating theme file..."
          THEME_FILE=$(node -p "require('./package.json').contributes.themes[0].path")
          if [ ! -f "$THEME_FILE" ]; then
            echo "‚ùå Theme file not found: $THEME_FILE"
            exit 1
          fi
          echo "‚úÖ Theme file exists: $THEME_FILE"

          # Validate JSON syntax
          if ! node -e "JSON.parse(require('fs').readFileSync('$THEME_FILE', 'utf8'))"; then
            echo "‚ùå Invalid JSON in theme file"
            exit 1
          fi
          echo "‚úÖ Theme file has valid JSON syntax"

      - name: Package extension
        run: |
          echo "üì¶ Packaging extension..."
          vsce package

          # List generated VSIX files
          echo "Generated VSIX files:"
          ls -la *.vsix

      - name: Verify package contents
        run: |
          echo "üîç Verifying package contents..."
          VSIX_FILE=$(ls *.vsix | head -n 1)
          unzip -l "$VSIX_FILE"

      - name: Upload VSIX as artifact
        uses: actions/upload-artifact@v4
        with:
          name: test-build-vsix-${{ github.sha }}
          path: '*.vsix'
          retention-days: 7

      - name: Test build summary
        run: |
          echo "‚úÖ Build completed successfully!"
          echo "üìä Build Summary:"
          echo "- Publisher: $(node -p 'require(\"./package.json\").publisher')"
          echo "- Version: $(node -p 'require(\"./package.json\").version')"
          echo "- Theme: $(node -p 'require(\"./package.json\").contributes.themes[0].label')"
          echo "- VSIX: $(ls *.vsix)"

  trigger-publish:
    needs: test-build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')

    steps:
      - name: Trigger publish workflow
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            console.log('üöÄ Triggering publish workflow...');
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'publish.yml',
              ref: context.ref
            });
            console.log('‚úÖ Publish workflow triggered successfully!');
